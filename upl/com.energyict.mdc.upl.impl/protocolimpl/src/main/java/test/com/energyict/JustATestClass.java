package test.com.energyict;

import com.energyict.protocol.ProfileData;
import com.energyict.protocolimpl.iec1107.abba1700.ABBA1700Profile;
import com.energyict.protocolimpl.utils.ProtocolTools;
import org.junit.jupiter.api.Test;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.Arrays;

/**
 * Copyrights EnergyICT
 * Date: 12/10/12
 * Time: 12:11
 */
public class JustATestClass {

    @Test
    public void testLoadProfileSpike() throws IOException {
        String raw

        String currentRaw = "4646464646";
        String previousRaw = "4646464646";

        byte[] currentBytes = ProtocolTools.getBytesFromHexString(currentRaw, 2);
        byte[] previousBytes = ProtocolTools.getBytesFromHexString(previousRaw, 2);

        boolean currentReceivedDataDuplicate = isCurrentReceivedDataDuplicate(previousBytes, currentBytes);

        boolean resultBool = containsOnlyHexF(currentBytes);


        byte[] input = ProtocolTools.getBytesFromHexString(raw, 2);

        ByteArrayInputStream bais = new ByteArrayInputStream(input);
        ABBA1700Profile profileParser = new ABBA1700Profile(null, null);

        ProfileData result = profileParser.parse(bais, 2);

        System.out.println(result);
    }

    private boolean isCurrentReceivedDataDuplicate(byte[] previousReceivedBytes, byte[] currentReceivedBytes) {
        return currentReceivedBytes.length == previousReceivedBytes.length &&
                Arrays.equals(currentReceivedBytes, previousReceivedBytes) &&
                !containsOnlyHexF(currentReceivedBytes);
    }

    private boolean containsOnlyHexF(byte[] inputBytes) {
        for (byte item : inputBytes) {
            if (item != (byte) 0x46) {
                return false;
            }
        }
        return true;
    }

}
