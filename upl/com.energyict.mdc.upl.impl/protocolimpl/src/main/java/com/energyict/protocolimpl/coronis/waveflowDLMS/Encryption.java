package com.energyict.protocolimpl.coronis.waveflowDLMS;

import com.energyict.protocol.ProtocolUtils;
import com.energyict.protocolimpl.base.CRCGenerator;

public class Encryption {

	
	
	private int calcCRC(final byte[] data) {
		
		
		
		return 0;
	}
	
	
	private void start() {
		
		AES128 o = new AES128(new byte[]{0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,0x0E,0x0F});
	
		
		byte[] rawData = new byte[]{0x11,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x01,0x01,0x00,0x60,0x01,0x00,(byte)0xFF,0x02,0x00,0x00};

		int val = CRCGenerator.calcHDLCCRC(rawData);
		System.out.println(Integer.toHexString(val));
		
		byte[] encrypted = o.encrypt(new byte[]{0x11,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x01,0x01,0x00,0x60,0x01,0x00,(byte)0xFF,0x02,0x00,0x00,0x0C,(byte)0xBD,0x2F,0x2F,0x2F,0x2F,0x2F,0x2F,0x2F,0x2F,0x2F,0x2F,0x2F,0x2F});
		System.out.println("Encrypted data: "+ProtocolUtils.outputHexString(encrypted));
		
		byte[] data = o.decrypt(encrypted);
		System.out.println("Data :"+ProtocolUtils.outputHexString(data));
		
		
		
		
	}
	
	
	public static void main(String[] args) {
		
		
		Encryption o = new Encryption();
		o.start();
	}
}
