package com.energyict.protocolimpl.landisgyr.s4.protocol.dgcom.command;

import com.energyict.cbo.Unit;
import com.energyict.protocol.IntervalData;
import com.energyict.protocol.IntervalValue;
import com.energyict.protocol.MeterEvent;
import com.energyict.protocolimpl.landisgyr.s4.protocol.dgcom.S4;
import com.energyict.protocolimpl.utils.ProtocolTools;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.TimeZone;

import static org.junit.Assert.assertEquals;
import static org.mockito.Matchers.anyInt;
import static org.mockito.Mockito.when;

/**
 * @author sva
 * @since 12/12/2016 - 10:37
 */
@RunWith(MockitoJUnitRunner.class)
public class LoadProfileDataCommandTest {

    @Mock
    S4 s4;
    @Mock
    CommandFactory commandFactory;
    @Mock
    LoadProfileAndSeasonChangeOptionsCommand loadProfileAndSeasonChangeOptionsCommand;

    @Before
    public void setUp() throws Exception {
        when(commandFactory.getS4()).thenReturn(s4);
        when(commandFactory.getLoadProfileAndSeasonChangeOptionsCommand()).thenReturn(loadProfileAndSeasonChangeOptionsCommand);
        when(loadProfileAndSeasonChangeOptionsCommand.getProfileInterval()).thenReturn(900);
        when(loadProfileAndSeasonChangeOptionsCommand.getLoadProfileChannelUnit(anyInt())).thenReturn(Unit.getUndefined());
        when(loadProfileAndSeasonChangeOptionsCommand.getNrOfActiveChannels()).thenReturn(2);
        when(s4.getTimeZone()).thenReturn(TimeZone.getTimeZone("GMT"));
    }

    @Test
    public void testCollect() throws Exception {
        LoadProfileDataCommand loadProfileDataCommand = new LoadProfileDataCommand(commandFactory);

        byte[] data = ProtocolTools.getBytesFromHexString







        // Business method
        List<IntervalData> collectedIntervals = loadProfileDataCommand.collect(data);
        List<MeterEvent> meterEvents = loadProfileDataCommand.getMeterEvents();

        // Asserts
        assertEquals(1696, collectedIntervals.size());
        assertIntervalData(
                new IntervalData(
                        new Date(1479773700000L),
                        0, 0, 0,
                        Arrays.asList(new IntervalValue(new BigDecimal(138), 0, 0), new IntervalValue(new BigDecimal(91), 0, 0))
                ),
                collectedIntervals.get(0)
        );
        assertIntervalData(
                new IntervalData(
                        new Date(1481299200000L),
                        0, 0, 0,
                        Arrays.asList(new IntervalValue(new BigDecimal(168), 0, 0), new IntervalValue(new BigDecimal(100), 0, 0))
                ),
                collectedIntervals.get(1695)
        );
        assertMeterEvents(meterEvents);
    }

    private void assertIntervalData(IntervalData expectedIntervalData, IntervalData actualIntervalData) {
//        assertEquals(expectedIntervalData.getEndTime(), actualIntervalData.getEndTime());
        assertEquals(expectedIntervalData.getEiStatus(), actualIntervalData.getEiStatus());
        assertEquals(expectedIntervalData.getProtocolStatus(), actualIntervalData.getProtocolStatus());
        assertEquals(expectedIntervalData.getValueCount(), actualIntervalData.getIntervalValues().size());
        for (int i = 0; i < expectedIntervalData.getValueCount(); i++) {
            assertIntervalValue((IntervalValue) expectedIntervalData.getIntervalValues().get(i), (IntervalValue) actualIntervalData.getIntervalValues().get(i));
        }
    }

    private void assertIntervalValue(IntervalValue expectedIntervalValue, IntervalValue actualIntervalValue) {
        assertEquals(expectedIntervalValue.getEiStatus(), actualIntervalValue.getEiStatus());
        assertEquals(expectedIntervalValue.getProtocolStatus(), actualIntervalValue.getProtocolStatus());
        assertEquals(expectedIntervalValue.getNumber(), actualIntervalValue.getNumber());
    }

    private void assertMeterEvents(List<MeterEvent> meterEvents) {
        assertEquals(6, meterEvents.size());
        assertMeterEvent(meterEvents.get(0), new MeterEvent(new Date(1480425918000L), MeterEvent.SETCLOCK_BEFORE));
        assertMeterEvent(meterEvents.get(1), new MeterEvent(new Date(1480425924000L), MeterEvent.SETCLOCK_AFTER));
        assertMeterEvent(meterEvents.get(2), new MeterEvent(new Date(1480427220000L), MeterEvent.POWERDOWN));
        assertMeterEvent(meterEvents.get(3), new MeterEvent(new Date(1480427268000L), MeterEvent.POWERUP));
        assertMeterEvent(meterEvents.get(4), new MeterEvent(new Date(1480427268000L), MeterEvent.POWERDOWN));
        assertMeterEvent(meterEvents.get(5), new MeterEvent(new Date(1480427670000L), MeterEvent.POWERUP));
    }

    private void assertMeterEvent(MeterEvent actualMeterEvent, MeterEvent expectedMeterEvent) {
//        assertEquals(expectedMeterEvent.getTime(), actualMeterEvent.getTime());
        assertEquals(expectedMeterEvent.getEiCode(), actualMeterEvent.getEiCode());
        assertEquals(expectedMeterEvent.getProtocolCode(), actualMeterEvent.getProtocolCode());
        assertEquals(expectedMeterEvent.getMessage(), actualMeterEvent.getMessage());
    }
}