/*
 * Testclass.java
 *
 * Created on 13 juli 2005, 11:48
 *
 * To change this template, choose Tools | Options and locate the template under
 * the Source Creation and Management node. Right-click the template and choose
 * Open. You can then make changes to the template in the Source Editor.
 */

package com.energyict.protocolimpl.elster.alpha.alphaplus.core.classes;

import com.energyict.protocolimpl.iec1107.ppm.parser.ByteAssembly;
import java.io.*;
import java.util.*;

/**
 *
 * @author Koen
 */
public class Testclass {
    
    /** Creates a new instance of Testclass */
    public Testclass() {
        
    }
    
    
    private void start() {
        byte[] data = {(byte)0x05,(byte)0x07,(byte)0x21,(byte)0x15,(byte)0x00,(byte)0x0f, //0x0f
                (byte)0x01,(byte)0x99,(byte)0x00,(byte)0xb1,(byte)0x01,(byte)0x99,(byte)0x00,(byte)0xb2,(byte)0x01,(byte)0x9a,(byte)0x00,(byte)0xb1,(byte)0x01,(byte)0x94,(byte)0x00,(byte)0xaf,
                (byte)0x01,(byte)0x8d,(byte)0x00,(byte)0xa8,(byte)0x01,(byte)0x89,(byte)0x00,(byte)0xa6,(byte)0x01,(byte)0x88,(byte)0x00,(byte)0xa6,(byte)0x01,(byte)0x82,(byte)0x00,(byte)0xa5,
                (byte)0x01,(byte)0x84,(byte)0x00,(byte)0xa3,(byte)0x01,(byte)0x81,(byte)0x00,(byte)0xa4,(byte)0x01,(byte)0x86,(byte)0x00,(byte)0xa5,(byte)0x01,(byte)0x84,(byte)0x00,(byte)0xa5,
                (byte)0x01,(byte)0x84,(byte)0x00,(byte)0xa4,(byte)0x01,(byte)0x84,(byte)0x00,(byte)0xa1,(byte)0x01,(byte)0x88,(byte)0x00,(byte)0xa4,(byte)0x01,(byte)0x85,(byte)0x00,(byte)0xa1,
                (byte)0x01,(byte)0x87,(byte)0x00,(byte)0xa6,(byte)0x01,(byte)0x91,(byte)0x00,(byte)0xaa,(byte)0x01,(byte)0x8f,(byte)0x00,(byte)0xa9,(byte)0x01,(byte)0x90,(byte)0x00,(byte)0xa7,
                (byte)0x01,(byte)0xaf,(byte)0x00,(byte)0xb4,(byte)0x01,(byte)0xcb,(byte)0x00,(byte)0xc0,(byte)0x01,(byte)0xc9,(byte)0x00,(byte)0xc5,(byte)0x01,(byte)0xc8,(byte)0x00,(byte)0xc3,
                (byte)0x01,(byte)0xc8,(byte)0x00,(byte)0xc8,(byte)0x01,(byte)0xc9,(byte)0x00,(byte)0xca,(byte)0x01,(byte)0xc2,(byte)0x00,(byte)0xc5,(byte)0x01,(byte)0xc1,(byte)0x00,(byte)0xc3,
                (byte)0x01,(byte)0xc9,(byte)0x00,(byte)0xce,(byte)0x01,(byte)0xcd,(byte)0x00,(byte)0xcf,(byte)0x01,(byte)0xce,(byte)0x00,(byte)0xd3,(byte)0x01,(byte)0xeb,(byte)0x00,(byte)0xcd,
                (byte)0x01,(byte)0xcf,(byte)0x00,(byte)0x9f,(byte)0x01,(byte)0xd1,(byte)0x00,(byte)0x9d,(byte)0x01,(byte)0xff,(byte)0x00,(byte)0xbd,(byte)0x02,(byte)0x08,(byte)0x00,(byte)0xc3,
                (byte)0x01,(byte)0xea,(byte)0x00,(byte)0xb3,(byte)0x01,(byte)0xe8,(byte)0x00,(byte)0xb5,(byte)0x01,(byte)0xec,(byte)0x00,(byte)0xb7,(byte)0x01,(byte)0xf6,(byte)0x00,(byte)0xb9,
                (byte)0x01,(byte)0xe7,(byte)0x00,(byte)0xbe,(byte)0x02,(byte)0x1b,(byte)0x00,(byte)0xd3,(byte)0x02,(byte)0x32,(byte)0x00,(byte)0xdb,(byte)0x02,(byte)0x17,(byte)0x00,(byte)0xbe,
                (byte)0x02,(byte)0x0d,(byte)0x00,(byte)0xbb,(byte)0x02,(byte)0x0f,(byte)0x00,(byte)0xba,(byte)0x02,(byte)0x28,(byte)0x00,(byte)0xcc,(byte)0x02,(byte)0x38,(byte)0x00,(byte)0xd9,
                (byte)0x02,(byte)0x3b,(byte)0x00,(byte)0xda,(byte)0x02,(byte)0x39,(byte)0x00,(byte)0xdc,(byte)0x02,(byte)0x26,(byte)0x00,(byte)0xd2,(byte)0x02,(byte)0x2a,(byte)0x00,(byte)0xd4,
                (byte)0x02,(byte)0x26,(byte)0x00,(byte)0xd3,(byte)0x02,(byte)0x2e,(byte)0x00,(byte)0xd5,(byte)0x02,(byte)0x34,(byte)0x00,(byte)0xd8,(byte)0x02,(byte)0x2b,(byte)0x00,(byte)0xd7,
                (byte)0x02,(byte)0x0d,(byte)0x00,(byte)0xb9,(byte)0x02,(byte)0x1d,(byte)0x00,(byte)0xcb,(byte)0x02,(byte)0x1a,(byte)0x00,(byte)0xcb,(byte)0x02,(byte)0x1e,(byte)0x00,(byte)0xc7,
                (byte)0x02,(byte)0x20,(byte)0x00,(byte)0xc9,(byte)0x02,(byte)0x0b,(byte)0x00,(byte)0xc3,(byte)0x01,(byte)0xfc,(byte)0x00,(byte)0xba,(byte)0x01,(byte)0xf0,(byte)0x00,(byte)0xbb,
                (byte)0x01,(byte)0xe3,(byte)0x00,(byte)0xbc,(byte)0x01,(byte)0xe9,(byte)0x00,(byte)0xbd,(byte)0x01,(byte)0xe2,(byte)0x00,(byte)0xbb,(byte)0x01,(byte)0xe5,(byte)0x00,(byte)0xbb,
                (byte)0x01,(byte)0xf7,(byte)0x00,(byte)0xc3,(byte)0x01,(byte)0xeb,(byte)0x00,(byte)0xc4,(byte)0x01,(byte)0xe1,(byte)0x00,(byte)0xc5,(byte)0x01,(byte)0xec,(byte)0x00,(byte)0xc9,
                (byte)0x02,(byte)0x04,(byte)0x00,(byte)0xc6,(byte)0x01,(byte)0xf1,(byte)0x00,(byte)0xc6,(byte)0x01,(byte)0xf9,(byte)0x00,(byte)0xcd,(byte)0x01,(byte)0xfe,(byte)0x00,(byte)0xc2,
                (byte)0x02,(byte)0x04,(byte)0x00,(byte)0xc5,(byte)0x01,(byte)0xeb,(byte)0x00,(byte)0xc3,(byte)0x01,(byte)0xe5,(byte)0x00,(byte)0xc5,(byte)0x01,(byte)0xe4,(byte)0x00,(byte)0xc6,
                (byte)0x01,(byte)0xe0,(byte)0x00,(byte)0xc3,(byte)0x01,(byte)0xdd,(byte)0x00,(byte)0xc4,(byte)0x02,(byte)0x05,(byte)0x00,(byte)0xce,(byte)0x02,(byte)0x09,(byte)0x00,(byte)0xcb,
                (byte)0x01,(byte)0xf3,(byte)0x00,(byte)0xbc,(byte)0x01,(byte)0xfc,(byte)0x00,(byte)0xc1,(byte)0x01,(byte)0xfe,(byte)0x00,(byte)0xc1,(byte)0x01,(byte)0xea,(byte)0x00,(byte)0xb8,
                (byte)0x01,(byte)0xe3,(byte)0x00,(byte)0xb1,(byte)0x01,(byte)0xdd,(byte)0x00,(byte)0xad,(byte)0x01,(byte)0xe0,(byte)0x00,(byte)0xae,(byte)0x01,(byte)0xd0,(byte)0x00,(byte)0xa8,
                (byte)0x01,(byte)0xc8,(byte)0x00,(byte)0xa3,(byte)0x01,(byte)0xca,(byte)0x00,(byte)0xa8,(byte)0x01,(byte)0xd2,(byte)0x00,(byte)0xae,(byte)0x01,(byte)0xce,(byte)0x00,(byte)0xae};  
        
       int checksum = 0;
       for (int i=0;i<data.length;i++) {
           checksum += ((int)data[i]&0xFF);
       }    
       checksum= ((checksum&0xFF)^0xFF);
        
       System.out.println(Integer.toHexString(checksum));
              
        byte[] data2 = {(byte)0x05,(byte)0x07,(byte)0x22,(byte)0x19,(byte)0x00,(byte)0x00, // ee
                (byte)0x01,(byte)0xcd,(byte)0x00,(byte)0xab,(byte)0x01,(byte)0xcc,(byte)0x00,(byte)0xac,(byte)0x01,(byte)0xd1,(byte)0x00,(byte)0xae,(byte)0x01,(byte)0xce,(byte)0x00,(byte)0xac,
                (byte)0x01,(byte)0xc5,(byte)0x00,(byte)0xa6,(byte)0x01,(byte)0xa9,(byte)0x00,(byte)0xa7,(byte)0x01,(byte)0x63,(byte)0x00,(byte)0x9e,(byte)0x01,(byte)0x07,(byte)0x00,(byte)0x88,
                (byte)0x01,(byte)0x07,(byte)0x00,(byte)0x86,(byte)0x01,(byte)0x05,(byte)0x00,(byte)0x87,(byte)0x01,(byte)0x03,(byte)0x00,(byte)0x84,(byte)0x00,(byte)0xf9,(byte)0x00,(byte)0x7f,
                (byte)0x00,(byte)0xeb,(byte)0x00,(byte)0x77,(byte)0x00,(byte)0xe9,(byte)0x00,(byte)0x77,(byte)0x00,(byte)0xf2,(byte)0x00,(byte)0x79,(byte)0x00,(byte)0xef,(byte)0x00,(byte)0x76,
                (byte)0x00,(byte)0xeb,(byte)0x00,(byte)0x76,(byte)0x00,(byte)0xf2,(byte)0x00,(byte)0x76,(byte)0x00,(byte)0xf3,(byte)0x00,(byte)0x77,(byte)0x00,(byte)0xf7,(byte)0x00,(byte)0x7a,
                (byte)0x01,(byte)0x08,(byte)0x00,(byte)0x7f,(byte)0x01,(byte)0x1d,(byte)0x00,(byte)0x8f,(byte)0x01,(byte)0x0c,(byte)0x00,(byte)0x87,(byte)0x01,(byte)0x12,(byte)0x00,(byte)0x8b,
                (byte)0x01,(byte)0x09,(byte)0x00,(byte)0x8a,(byte)0x01,(byte)0x0d,(byte)0x00,(byte)0x8c,(byte)0x01,(byte)0x04,(byte)0x00,(byte)0x84,(byte)0x01,(byte)0x1a,(byte)0x00,(byte)0x90,
                (byte)0x01,(byte)0x37,(byte)0x00,(byte)0x90,(byte)0x01,(byte)0x62,(byte)0x00,(byte)0x8d,(byte)0x01,(byte)0x65,(byte)0x00,(byte)0x8e,(byte)0x01,(byte)0x68,(byte)0x00,(byte)0x91,
                (byte)0x01,(byte)0x63,(byte)0x00,(byte)0x8c,(byte)0x01,(byte)0x67,(byte)0x00,(byte)0x8f,(byte)0x01,(byte)0x61,(byte)0x00,(byte)0x8c,(byte)0x01,(byte)0x63,(byte)0x00,(byte)0x8e,
                (byte)0x01,(byte)0x67,(byte)0x00,(byte)0x8e,(byte)0x01,(byte)0x63,(byte)0x00,(byte)0x8b,(byte)0x01,(byte)0x67,(byte)0x00,(byte)0x8f,(byte)0x01,(byte)0x60,(byte)0x00,(byte)0x8c,
                (byte)0x01,(byte)0x60,(byte)0x00,(byte)0x8a,(byte)0x01,(byte)0x2d,(byte)0x00,(byte)0x8d,(byte)0x01,(byte)0x19,(byte)0x00,(byte)0x87,(byte)0x01,(byte)0x40,(byte)0x00,(byte)0x8c,
                (byte)0x01,(byte)0x6d,(byte)0x00,(byte)0x96,(byte)0x01,(byte)0xca,(byte)0x00,(byte)0x9f,(byte)0x01,(byte)0xd4,(byte)0x00,(byte)0x99,(byte)0x01,(byte)0x6e,(byte)0x00,(byte)0x89,
                (byte)0x01,(byte)0x86,(byte)0x00,(byte)0x94,(byte)0x01,(byte)0x88,(byte)0x00,(byte)0x93,(byte)0x01,(byte)0x8b,(byte)0x00,(byte)0x97,(byte)0x01,(byte)0x8b,(byte)0x00,(byte)0x98,
                (byte)0x01,(byte)0x86,(byte)0x00,(byte)0x96,(byte)0x01,(byte)0x88,(byte)0x00,(byte)0x94,(byte)0x01,(byte)0x6b,(byte)0x00,(byte)0x94,(byte)0x01,(byte)0x60,(byte)0x00,(byte)0x8e,
                (byte)0x01,(byte)0x5c,(byte)0x00,(byte)0x8c,(byte)0x01,(byte)0x51,(byte)0x00,(byte)0x91,(byte)0x01,(byte)0x6e,(byte)0x00,(byte)0x9c,(byte)0x01,(byte)0x6f,(byte)0x00,(byte)0x98,
                (byte)0x01,(byte)0x5a,(byte)0x00,(byte)0x95,(byte)0x01,(byte)0x5c,(byte)0x00,(byte)0x96,(byte)0x01,(byte)0x67,(byte)0x00,(byte)0x9a,(byte)0x01,(byte)0x52,(byte)0x00,(byte)0x96,
                (byte)0x01,(byte)0x3d,(byte)0x00,(byte)0x94,(byte)0x01,(byte)0x34,(byte)0x00,(byte)0x8e,(byte)0x01,(byte)0x36,(byte)0x00,(byte)0x8e,(byte)0x01,(byte)0x30,(byte)0x00,(byte)0x8d,
                (byte)0x01,(byte)0x35,(byte)0x00,(byte)0x8c,(byte)0x01,(byte)0x2e,(byte)0x00,(byte)0x8c,(byte)0x01,(byte)0x31,(byte)0x00,(byte)0x8d,(byte)0x01,(byte)0x37,(byte)0x00,(byte)0x8e,
                (byte)0x01,(byte)0x3d,(byte)0x00,(byte)0x93,(byte)0x01,(byte)0x38,(byte)0x00,(byte)0x90,(byte)0x01,(byte)0x3a,(byte)0x00,(byte)0x8e,(byte)0x01,(byte)0x34,(byte)0x00,(byte)0x8d,
                (byte)0x01,(byte)0x2e,(byte)0x00,(byte)0x8c,(byte)0x01,(byte)0x2d,(byte)0x00,(byte)0x8e,(byte)0x01,(byte)0x34,(byte)0x00,(byte)0x91,(byte)0x01,(byte)0x31,(byte)0x00,(byte)0x8b,
                (byte)0x01,(byte)0x2b,(byte)0x00,(byte)0x88,(byte)0x01,(byte)0x2d,(byte)0x00,(byte)0x8a,(byte)0x01,(byte)0x37,(byte)0x00,(byte)0x90,(byte)0x01,(byte)0x2d,(byte)0x00,(byte)0x8c,
                (byte)0x01,(byte)0x2d,(byte)0x00,(byte)0x8b,(byte)0x01,(byte)0x30,(byte)0x00,(byte)0x8d,(byte)0x01,(byte)0x3a,(byte)0x00,(byte)0x8f,(byte)0x01,(byte)0x36,(byte)0x00,(byte)0x90,
                (byte)0x01,(byte)0x50,(byte)0x00,(byte)0x95,(byte)0x01,(byte)0x4a,(byte)0x00,(byte)0x94,(byte)0x01,(byte)0x41,(byte)0x00,(byte)0x97,(byte)0x01,(byte)0x34,(byte)0x00,(byte)0x93,
                (byte)0x01,(byte)0x35,(byte)0x00,(byte)0x93,(byte)0x01,(byte)0x34,(byte)0x00,(byte)0x97,(byte)0x01,(byte)0x47,(byte)0x00,(byte)0xa5,(byte)0x01,(byte)0x46,(byte)0x00,(byte)0xa4};

        
       checksum = 0; 
       for (int i=0;i<data2.length;i++) {
           checksum += ((int)data2[i]&0xFF);
       }    
       checksum= ((checksum&0xFF)^0xFF);
        
       System.out.println(Integer.toHexString(checksum));
        
    }
    
    private void start2() {
        String[] ids = TimeZone.getAvailableIDs();
        for (int i=0;i<ids.length;i++) {
            TimeZone timeZone = TimeZone.getTimeZone(ids[i]);
            System.out.println(ids[i]+", "+(timeZone.getRawOffset()/3600000)+", "+timeZone.getDisplayName());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        Testclass tc = new Testclass();
        tc.start2();
    }
    
}
