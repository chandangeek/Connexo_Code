package com.energyict.mdc.common.impl;

import com.elster.jupiter.nls.TranslationKey;

/**
 * Insert your comments here.
 *
 * @author Rudi Vankeirsbilck (rudi)
 * @since 2017-01-27 (15:09)
 */
public enum ObisCodeTranslationKeys implements TranslationKey {

    REGISTER_ACTIVE_POWER_PLUS("obisWizard.activePowerPlus", "Active power+"),
    REGISTER_ACTIVE_POWER_MINUS("obisWizard.activePowerMinus", "Active power-"),
    REGISTER_REACTIVE_POWER_PLUS("obisWizard.reactivePowerPlus", "Reactive power+"),
    REGISTER_REACTIVE_POWER_MINUS("obisWizard.reactivePowerMinus", "Reactive power-"),
    REGISTER_REACTIVE_POWER_QI("obisWizard.reactivePowerQI", "Reactive power QI"),
    REGISTER_REACTIVE_POWER_QII("obisWizard.reactivePowerQII", "Reactive power QII"),
    REGISTER_REACTIVE_POWER_QIII("obisWizard.reactivePowerQIII", "Reactive power QIII"),
    REGISTER_REACTIVE_POWER_QIV("obisWizard.reactivePowerQIV", "Reactive power QIV"),
    REGISTER_APPARENT_POWER_PLUS("obisWizard.apparentPowerPlus", "Apparent power+"),
    REGISTER_APPARENT_POWER_MINUS("obisWizard.apparentPowerMinus", "Apparent power-"),
    REGISTER_CURRENT("obisWizard.current", "Current"),
    REGISTER_VOLTAGE("obisWizard.voltage", "Voltage"),
    REGISTER_POWER_FACTOR("obisWizard.powerFactor", "Power factor"),
    REGISTER_FREQUENCY("obisWizard.frequency", "Frequency"),
    REGISTER_ACTIVE_POWER_Q1423("obisWizard.activePowerQ1423", "Active power QI+QIV+QII+QIII"),
    REGISTER_ACTIVE_POWER_Q14_MINUS_Q23("obisWizard.activePowerQ14MinusQ23", "Active power QI+QIV-QII-QIII"),
    REGISTER_ACTIVE_POWER_QI("obisWizard.activePowerQI", "Active power QI"),
    REGISTER_ACTIVE_POWER_QII("obisWizard.activePowerQII", "Active power QII"),
    REGISTER_ACTIVE_POWER_QIII("obisWizard.activePowerQIII", "Active power QIII"),
    REGISTER_ACTIVE_POWER_QIV("obisWizard.activePowerQIV", "Active power QIV"),

    ALL_PHASES("obisWizard.allPhases", "All phases"),
    PHASE_1("obisWizard.phase1", "Phase 1"),
    PHASE_2("obisWizard.phase2", "Phase 2"),
    PHASE_3("obisWizard.phase3", "Phase 3"),

    CHOICE_A_ABSTRACT_OBIS_CODE("obisWizard.abstractObisCode", "Abstract OBIS code"),
    CHOICE_A_ELECTRICITY_OBIS_CODE("obisWizard.electricityRelatedObisCode", "Electricity related OBIS code"),
    CHOICE_A_HEAT_COST_ALLOCATOR_OBIS_CODE("obisWizard.heatCostAllocatorRelatedObisCode", "Heat cost allocator related OBIS code"),
    CHOICE_A_COOLING_OBIS_CODE("obisWizard.coolingRelatedObisCode", "Cooling related OBIS code"),
    CHOICE_A_HEAT_OBIS_CODE("obisWizard.heatRelatedObisCode", "Heat related OBIS code"),
    CHOICE_A_GAS_OBIS_CODE("obisWizard.gasRelatedObisCode", "Gas related OBIS code"),
    CHOICE_A_COLD_WATER_OBIS_CODE("obisWizard.coldWaterRelatedObisCode", "Cold water related OBIS code"),
    CHOICE_A_HOT_WATER_OBIS_CODE("obisWizard.hotWaterRelatedObisCode", "Hot water related OBIS code"),

    CHOICE_C_GENERAL_SERVICE_ENTRIES("obisWizard.generalServiceEntries", "General service entries"),
    CHOICE_C_GENERAL_PURPOSE("obisWizard.generalPurpose", "General purpose"),
    CHOICE_C_UNITLESS_QUANTITY("obisWizard.unitlessQuantity", "Unitless quantity (pulses or pieces)"),
    CHOICE_C_L0_CURRENT("obisWizard.l0Current", "L0 current (neutral)"),
    CHOICE_C_L0_VOLTAGE("obisWizard.l0Voltage", "L0 voltage (neutral)"),

    CHOICE_D_PARAMETER_CHANGES_OBIS_CODE("obisWizard.parameterChangesRelatedObisCode", "Parameter changes related OBIS code"),
    CHOICE_D_IO_CONTROL_SIGNALS_OBIS_CODE("obisWizard.IOControlSignalsRelatedObisCode", "Input/output control signals related OBIS code"),
    CHOICE_D_INTERNAL_CONTROL_SIGNALS_OBIS_CODE("obisWizard.internalControlSignalsRelatedObisCode", "Internal control signals related OBIS code"),
    CHOICE_D_INTERNAL_STATUS_SIGNALS_OBIS_CODE("obisWizard.internalOperatingStatusRelatedObisCode", "Internal operating status related OBIS code"),
    CHOICE_D_BATTERY_ENTRIES_OBIS_CODE("obisWizard.batteryEntriesRelatedObisCode", "Battery entries related OBIS code"),
    CHOICE_D_POWER_FAILURES_OBIS_CODE("obisWizard.powerFailuresRelatedObisCode", "Number of power failures related OBIS code"),
    CHOICE_D_OPERATING_TIME_OBIS_CODE("obisWizard.operatingTimeRelatedObisCode", "Operating time related OBIS code"),
    CHOICE_D_ENVIRONMENTAL_OBIS_CODE("obisWizard.environmentalRelatedObisCode", "Environmental related OBIS code"),
    CHOICE_D_BILLING_PERIOD_COUNTER_ENTRIES("obisWizard.billingPeriodCounterEntries", "Billing period counter entries"),
    CHOICE_D_PROGRAM_ENTRIES("obisWizard.programEntries", "Program entries"),
    CHOICE_D_OUTPUT_PULSE_CONSTANTS("obisWizard.outputPulseConstants", "Output pulse constants"),
    CHOICE_D_RATIOS("obisWizard.ratios", "Ratios"),
    CHOICE_D_NOMINAL_VALUES("obisWizard.nominalValues", "Nominal values"),
    CHOICE_D_INPUT_PULSE_CONSTANTS("obisWizard.inputPulseConstants", "Input pulse constants"),
    CHOICE_D_MEASUREMENT_PERIODS("obisWizard.measurementPeriods", "Measurement periods"),
    CHOICE_D_TIME_ENTRIES("obisWizard.timeEntries", "Time entries"),
    CHOICE_D_COEFFICIENTS("obisWizard.coefficients", "CoÃ«fficients"),
    CHOICE_D_MEASUREMENT_METHODS("obisWizard.measurementMethods", "Measurement methods"),
    CHOICE_D_BILLING_PERIOD_AVG("obisWizard.billingPeriodAverage", "Billing period average (since last reset)"),
    CHOICE_D_CUMULATIVE_MIN_USING_MEASUREMENT_PERIOD1("obisWizard.cumulativeMinimumUsingMeasurementPeriod1", "Cumulative minimum using measurement period 1"),
    CHOICE_D_CUMULATIVE_MAX_USING_MEASUREMENT_PERIOD1("obisWizard.cumulativeMaximumUsingMeasurementPeriod1", "Cumulative maximum using measurement period 1"),
    CHOICE_D_MIN_USING_MEASUREMENT_PERIOD1("obisWizard.minimumUsingMeasurementPeriod1", "Minimum using measurement period 1"),
    CHOICE_D_CURRENT_AVG_USING_MEASUREMENT_PERIOD1("obisWizard.currentAverageUsingMeasurementPeriod1", "Current average using measurement period 1"),
    CHOICE_D_LAST_AVG_USING_MEASUREMENT_PERIOD1("obisWizard.lastAverageUsingMeasurementPeriod1", "Last average using measurement period 1"),
    CHOICE_D_MAX_USING_MEASUREMENT_PERIOD1("obisWizard.maximumUsingMeasurementPeriod1", "Maximum using measurement period 1"),
    CHOICE_D_INSTANTANEOUS_VALUE("obisWizard.instantaneousValue", "Instantaneous value"),
    CHOICE_D_CUMULATIVE_MIN_USING_MEASUREMENT_PERIOD2("obisWizard.cumulativeMinimumUsingMeasurementPeriod2", "Cumulative minimum using measurement period 2"),
    CHOICE_D_CUMULATIVE_MAX_USING_MEASUREMENT_PERIOD2("obisWizard.cumulativeMaximumUsingMeasurementPeriod2", "Cumulative maximum using measurement period 2"),
    CHOICE_D_MIN_USING_MEASUREMENT_PERIOD2("obisWizard.minimumUsingMeasurementPeriod2", "Minimum using measurement period 2"),
    CHOICE_D_CURRENT_AVG_USING_MEASUREMENT_PERIOD2("obisWizard.currentAverageUsingMeasurementPeriod2", "Current average using measurement period 2"),
    CHOICE_D_LAST_AVG_USING_MEASUREMENT_PERIOD2("obisWizard.lastAverageUsingMeasurementPeriod2", "Last average using measurement period 2"),
    CHOICE_D_MAX_USING_MEASUREMENT_PERIOD2("obisWizard.maximumUsingMeasurementPeriod2", "Maximum using measurement period 2"),
    CHOICE_D_CUMULATIVE_MIN_USING_MEASUREMENT_PERIOD3("obisWizard.cumulativeMinimumUsingMeasurementPeriod3", "Cumulative minimum using measurement period 3"),
    CHOICE_D_CUMULATIVE_MAX_USING_MEASUREMENT_PERIOD3("obisWizard.cumulativeMaximumUsingMeasurementPeriod3", "Cumulative maximum using measurement period 3"),
    CHOICE_D_MIN_USING_MEASUREMENT_PERIOD3("obisWizard.minimumUsingMeasurementPeriod3", "Minimum using measurement period 3"),
    CHOICE_D_CURRENT_AVG_USING_MEASUREMENT_PERIOD3("obisWizard.currentAverageUsingMeasurementPeriod3", "Current average using measurement period 3"),
    CHOICE_D_LAST_AVG_USING_MEASUREMENT_PERIOD3("obisWizard.lastAverageUsingMeasurementPeriod3", "Last average using measurement period 3"),
    CHOICE_D_MAX_USING_MEASUREMENT_PERIOD3("obisWizard.maximumUsingMeasurementPeriod3", "Maximum using measurement period 13"),
    CHOICE_D_CURRENT_AVG_USING_RECORDING_INTERVAL1("obisWizard.currentAverageUsingRecordingInterval1", "Current average using recording interval 1"),
    CHOICE_D_CURRENT_AVG_USING_RECORDING_INTERVAL2("obisWizard.currentAverageUsingRecordingInterval2", "Current average using recording interval 2"),
    CHOICE_D_UNDER_LIMIT_THRESHOLD("obisWizard.underLimitThreshold", "Under limit threshold"),
    CHOICE_D_UNDER_LIMIT_OCCURRENCE_COUNTER("obisWizard.underLimitOccurrenceCounter", "Under limit occurrence counter"),
    CHOICE_D_UNDER_LIMIT_DURATION("obisWizard.underLimitDuration", "Under limit duration"),
    CHOICE_D_UNDER_LIMIT_MAGNITUDE("obisWizard.underLimitMagnitude", "Under limit magnitude"),
    CHOICE_D_OVER_LIMIT_THRESHOLD("obisWizard.overLimitThreshold", "Over limit threshold"),
    CHOICE_D_OVER_LIMIT_OCCURRENCE_COUNTER("obisWizard.overLimitOccurrenceCounter", "Over limit occurrence counter"),
    CHOICE_D_OVER_LIMIT_DURATION("obisWizard.overLimitDuration", "Over limit duration"),
    CHOICE_D_OVER_LIMIT_MAGNITUDE("obisWizard.overLimitMagnitude", "Over limit magnitude"),
    CHOICE_D_MISSING_THRESHOLD("obisWizard.missingThreshold", "Missing threshold"),
    CHOICE_D_MISSING_OCCURRENCE_COUNTER("obisWizard.missingOccurrenceCounter", "Missing occurrence counter"),
    CHOICE_D_MISSING_DURATION("obisWizard.missingDuration", "Missing duration"),
    CHOICE_D_MISSING_MAGNITUDE("obisWizard.missingMagnitude", "Missing magnitude"),
    CHOICE_D_TEST_AVG("obisWizard.testAverage", "Test average"),
    CHOICE_D_TIME_INTEGRAL_TO_BILLING_POINT_X("obisWizard.timeIntegralFromStartOfMeasurementToBillingPointX", "Time integral from start of measurement to billing point {0,number}"),
    CHOICE_D_TIME_INTEGRAL_TO_NOW("obisWizard.timeIntegralFromStartOfMeasurementToNow", "Time integral from last billing point to now"),
    CHOICE_D_TIME_INTEGRAL_OVER_BILLING_PERIOD_X("obisWizard.timeIntegralOverBillingPeriodX", "Time integral over billing period {0,number}"),
    CHOICE_D_TIME_INTEGRAL_FROM_LAST_BILLING_POINT_TO_NOW("obisWizard.timeIntegralFromLastBillingPointToNow", "Time integral from last billing point to now"),
    CHOICE_D_TIME_INTEGRAL_POSITIVE_DIFFERENCE("obisWizard.timeIntegralOfPositiveDifference", "Time integral of positive difference between quantity and a prescribed threshold value"),
    CHOICE_D_TIME_INTEGRAL_OVER_DEVICE_SPECIFIC_TIME("obisWizard.timeIntegralOverDeviceSpecificTime", "Time integral over device specific time"),
    CHOICE_D_TIME_INTEGRAL_TO_NOW_USING_RECORDING_PERIOD1("obisWizard.timeIntegralFromStartOfCurrentRecordingIntervalToNowUsingRecordingPeriod1", "Time integral from start of current recording interval to now using recording period 1"),
    CHOICE_D_TIME_INTEGRAL_TO_NOW_USING_RECORDING_PERIOD2("obisWizard.timeIntegralFromStartOfCurrentRecordingIntervalToNowUsingRecordingPeriod2", "Time integral from start of current recording interval to now using recording period 2"),

    CHOICE_E_NR_OF_CFG_PROGRAM_CHANGES("obisWizard.nrOfConfigProgramChanges", "Number of configuration program changes"),
    CHOICE_E_DATE_OF_LAST_CFG_PROGRAM_CHANGE("obisWizard.dateOfLastConfigProgramChange", "Date of last configuration program change"),
    CHOICE_E_DATE_OF_LAST_TIME_SWITCH_PROGRAM_CHANGE("obisWizard.dateOfLastTimeSwitchProgramChange", "Date of last time switch program change"),
    CHOICE_E_DATE_OF_LAST_RIPPLE_CONTROL_RECEIVER_PROGRAM_CHANGE("obisWizard.dateOfLastRippleControlReceiverProgramChange", "Date of last ripple control receiver program change"),
    CHOICE_E_STATUS_OF_SECURITY_SWITCHES("obisWizard.statusOfSecuritySwitches", "Status of security switches"),
    CHOICE_E_DATE_OF_LAST_CALIBRATION("obisWizard.dateOfLastCalibration", "Date of last calibration"),
    CHOICE_E_DATE_OF_NEXT_CFG_PROGRAM_CHANGE("obisWizard.dateOfNextConfigProgramChange", "Date of next configuration program change"),
    CHOICE_E_NR_OF_PROTECTED_CFG_PROGRAM_CHANGES("obisWizard.nrOfProtectedConfigProgramChanges", "Number of protected configuration program changes"),
    CHOICE_E_DATE_OF_LAST_PROTECTED_CFG_PROGRAM_CHANGE("obisWizard.dateOfLastProtectedConfigProgramChange", "Date of last protected configuration program change"),
    CHOICE_E_STATE_INPUT_CONTROL_SIGNALS("obisWizard.stateOfInputControlSignals", "State of input control signals"),
    CHOICE_E_STATE_OUTPUT_CONTROL_SIGNALS("obisWizard.stateOfOutputControlSignals", "State of output control signals"),
    CHOICE_E_STATE_OF_INTERNAL_CONTROL_SIGNALS("obisWizard.stateOfInternalControlSignals", "State of internal control signals"),
    CHOICE_E_INTERNAL_OPERATING_STATUS("obisWizard.internalOperatingStatus", "Internal operating status"),
    CHOICE_E_BATTERY_USE_TIME_COUNTER("obisWizard.batteryUseTimeCounter", "Battery use time counter"),
    CHOICE_E_BATTERY_CHARGE_DISPLAY("obisWizard.batteryChargeDisplay", "Battery charge display"),
    CHOICE_E_DATE_OF_NEXT_CHANGE("obisWizard.dateOfNextChange", "Date of next change"),
    CHOICE_E_BATTERY_VOLTAGE("obisWizard.batteryVoltage", "Battery voltage"),
    CHOICE_E_TOTAL_FAILURE_3_PHASES("obisWizard.totalFailureOfAllThreePhases", "Total number of failures of all three phases of which the duration of the failure took longer than the internal autonomy"),
    CHOICE_E_PHASE_1_FAILURE("obisWizard.phase1Failure", "Phase L1 failure"),
    CHOICE_E_PHASE_2_FAILURE("obisWizard.phase2Failure", "Phase L2 failure"),
    CHOICE_E_PHASE_3_FAILURE("obisWizard.phase3Failure", "Phase L3 failure"),
    CHOICE_E_TIME_OF_OPERATION("obisWizard.timeOfOperation", "Time of operation"),
    CHOICE_E_TIME_OF_REGISTRATION_RATE_X("obisWizard.timeOfRegistrationRateX", "Time of registration rate {0,number}"),
    CHOICE_E_AMBIENT_TEMPERATURE("obisWizard.ambientTemperature", "Ambient temperature"),
    CHOICE_E_HARMONIC_X("obisWizard.harmonicX", "harmonic {0,number}"),
    CHOICE_E_RATE_X("obisWizard.rateX", "rate {0,number}"),
    CHOICE_E_BILLING_PERIOD_COUNTER("obisWizard.billingPeriodCounter", "Billing period counter"),
    CHOICE_E_NR_OF_AVAILABLE_BILLING_PERIODS("obisWizard.nrOfAvailableBillingPeriods", "Number of available billing periods"),
    CHOICE_E_TIMESTAMP_OF_BILLING_POINT_IN_CODE_F("obisWizard.timestampOfBillingPointInCodeF", "Timestamp of billing point in code F (VZ..VZ-n)"),
    CHOICE_E_TIMESTAMP_OF_BILLING_POINT_X("obisWizard.timestampOfBillingPointX", "Timestamp of billing point {0,number}"),
    CHOICE_E_CFG_PROGRAM_VERSION_NUMBER("obisWizard.configurationProgramVersionNumber", "Configuration program version number"),
    CHOICE_E_PARAMETER_RECORD_NUMBER("obisWizard.parameterRecordNumber", "Parameter record number"),
    CHOICE_E_TIME_SWITCH_PROGRAM_NUMBER("obisWizard.timeSwitchProgramNumber", "Time switch program number"),
    CHOICE_E_RCR_PROGRAM_NUMBER("obisWizard.RCRProgramNumber", "RCR program number"),
    CHOICE_E_MASTER_CONNECTION_DIAGRAM_ID("obisWizard.masterConnectionDiagramId", "Master connection diagram ID"),
    CHOICE_E_RLW_ACTIVE_ENERGY("obisWizard.RLWActiveEnergy", "RLW active energy, metrological LED"),
    CHOICE_E_RLB_REACTIVE_ENERGY("obisWizard.RLBReactiveEnergy", "RLB reactive energy, metrological LED"),
    CHOICE_E_RLS_APPARENT_ENERGY("obisWizard.RLSApparentEnergy", "RLS apparent energy, metrological LED"),
    CHOICE_E_RAW_ACTIVE_ENERGY("obisWizard.RAWActiveEnergy", "RAW active energy, output pulse"),
    CHOICE_E_RAB_REACTIVE_ENERGY("obisWizard.RABReactiveEnergy", "RAB reactive energy, output pulse"),
    CHOICE_E_RAS_APPARENT_ENERGY("obisWizard.RASApparentEnergy", "RAS apparent energy, output pulse"),
    CHOICE_E_TRANSFORMER_RATIO_CURRENT_NUMERATOR("obisWizard.transformerRatioCurrentNumerator", "Transformer ratio - current (numerator)"),
    CHOICE_E_TRANSFORMER_RATIO_VOLTAGE_NUMERATOR("obisWizard.transformerRatioVoltageNumerator", "Transformer ratio - voltage (numerator)"),
    CHOICE_E_OVERALL_TRANSFORMER_RATIO_NUMERATOR("obisWizard.overallTransformerRatioNumerator", "Overall transformer ratio (numerator)"),
    CHOICE_E_TRANSFORMER_RATIO_CURRENT_DENOMINATOR("obisWizard.transformerRatioCurrentDenominator", "Transformer ratio - current (denominator)"),
    CHOICE_E_TRANSFORMER_RATIO_VOLTAGE_DENOMINATOR("obisWizard.transformerRatioVoltageDenominator", "Transformer ratio - voltage (denominator)"),
    CHOICE_E_OVERALL_TRANSFORMER_RATIO_DENOMINATOR("obisWizard.overallTransformerRatioDenominator", "Overall transformer ratio (denominator)"),
    CHOICE_E_READING_FACTOR_FOR_POWER("obisWizard.readingFactorForPower", "Reading factor for power"),
    CHOICE_E_READING_FACTOR_FOR_ENERGY("obisWizard.readingFactorForEnergy", "Reading factor for energy"),
    CHOICE_E_REFERENCE_VOLTAGE_FOR_POWER_QUALITY("obisWizard.referenceVoltageForPowerQualityMeasurement", "Reference voltage for power quality measurement"),
    CHOICE_E_NOMINAL_VOLTAGE("obisWizard.nominalVoltage", "Nominal voltage [V]"),
    CHOICE_E_NOMINAL_CURRENT("obisWizard.nominalCurrent", "Basic/nominal current [A]"),
    CHOICE_E_NOMINAL_FREQUENCY("obisWizard.nominalFrequency", "Nominal frequency [Hz]"),
    CHOICE_E_MAXIMUM_CURRENT("obisWizard.maximumCurrent", "Maximum current [A]"),
    CHOICE_E_REW_ACTIVE_ENERGY("obisWizard.REWActiveEnergy", "REW [Imp/kWh] active energy"),
    CHOICE_E_REB_REACTIVE_ENERGY("obisWizard.REBReactiveEnergy", "REB [Imp/kWh] reactive energy"),
    CHOICE_E_RES_APPARENT_ENERGY("obisWizard.RESApparentEnergy", "RES [Imp/kWh] apparent energy"),
    CHOICE_E_MEASUREMENT_PERIOD_1_FOR_AVG_1("obisWizard.measurementPeriod1ForAvgValue1", "Measurement period 1 for average value 1"),
    CHOICE_E_MEASUREMENT_PERIOD_2_FOR_AVG_2("obisWizard.measurementPeriod2ForAvgValue2", "Measurement period 2 for average value 2"),
    CHOICE_E_MEASUREMENT_PERIOD_3_FOR_INSTANTANEOUS_VALUE("obisWizard.measurementPeriod3ForInstantaneousValue", "Measurement period 3 for instantaneous value"),
    CHOICE_E_RECORDING_INTERVAL_1_FOR_LOAD_PROFILE("obisWizard.recordingInterval1ForLoadProfile", "Recording interval 1 for load profile"),
    CHOICE_E_RECORDING_INTERVAL_2_FOR_LOAD_PROFILE("obisWizard.recordingInterval2ForLoadProfile", "Recording interval 2 for load profile"),
    CHOICE_E_BILLING_PERIOD("obisWizard.billingPeriod", "Billing period"),
    CHOICE_E_MEASUREMENT_PERIOD_4_FOR_TEST_VALUE("obisWizard.measurementPeriod4ForTestValue", "Measurement period 4 for test value"),
    CHOICE_E_TIME_EXPIRED_SINCE_LAST_BILLING_POINT("obisWizard.timeExpiredSinceLastBillingPoint", "Time expired since last billing point"),
    CHOICE_E_LOCAL_TIME("obisWizard.localTime", "Local time"),
    CHOICE_E_LOCAL_DATE("obisWizard.localDate", "Local date"),
    CHOICE_E_WEEK_DAY("obisWizard.weekDay", "Week day (0..7)"),
    CHOICE_E_TIME_OF_LAST_RESET("obisWizard.timeOfLastReset", "Time of last reset"),
    CHOICE_E_DATE_OF_LAST_RESET("obisWizard.dateOfLastReset", "Date of last reset"),
    CHOICE_E_OUTPUT_PULSE_DURATION("obisWizard.outputPulseDuration", "Output pulse duration"),
    CHOICE_E_CLOCK_SYNC_WINDOW("obisWizard.clockSyncWindow", "Clock synchronization window"),
    CHOICE_E_CLOCK_SYNC_METHOD("obisWizard.clockSyncMethod", "Clock synchronization method"),
    CHOICE_E_TRANSFORMER_MAGNETIC_LOSSES("obisWizard.transformerMagneticLosses", "Transformer magnetic losses"),
    CHOICE_E_TRANSFORMER_THERMA_LOSSES("obisWizard.transformerThermaLosses", "Transformer thermal losses"),
    CHOICE_E_LINE_RESISTANCE_LOSSES("obisWizard.lineResistanceLosses", "Line resistance losses"),
    CHOICE_E_LINE_REACTANCE_LOSSES("obisWizard.lineReactanceLosses", "Line reactance losses"),
    CHOICE_E_ALGORITHM_ACTIVE_POWER_MANAGEMENT("obisWizard.algorithmForActivePowerMeasurement", "Algorithm for active power measurement"),
    CHOICE_E_ALGORITHM_ACTIVE_ENERGY_MANAGEMENT("obisWizard.algorithmForActiveEnergyMeasurement", "Algorithm for active energy measurement"),
    CHOICE_E_ALGORITHM_REACTIVE_POWER_MANAGEMENT("obisWizard.algorithmForReactivePowerMeasurement", "Algorithm for reactive power measurement"),
    CHOICE_E_ALGORITHM_REACTIVE_ENERGY_MANAGEMENT("obisWizard.algorithmForReactiveEnergyMeasurement", "Algorithm for reactive energy measurement"),
    CHOICE_E_ALGORITHM_APPARENT_POWER_MANAGEMENT("obisWizard.algorithmForApparentPowerMeasurement", "Algorithm for apparent power measurement"),
    CHOICE_E_ALGORITHM_APPARENT_ENERGY_MANAGEMENT("obisWizard.algorithmForApparentEnergyMeasurement", "Algorithm for apparent energy measurement"),
    CHOICE_E_ALGORITHM_POWER_FACTOR_CALCULATION("obisWizard.algorithmForPowerFactorCalculation", "Algorithm for power factor calculation"),

    IN_CURRENT_ACTIVE_BILLING_PERIOD("obisWizard.inCurrentActiveBillingPeriod", "in current active billing period"),
    IN_BILLING_PERIOD_X("obisWizard.inBillingPeriodX", "in billing period {0,number}");

    private final String key;
    private final String defaultFormat;

    ObisCodeTranslationKeys(String key, String defaultFormat) {
        this.key = key;
        this.defaultFormat = defaultFormat;
    }

    @Override
    public String getKey() {
        return this.key;
    }

    @Override
    public String getDefaultFormat() {
        return this.defaultFormat;
    }

}