<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright (c) 2017 by Honeywell International Inc. All Rights Reserved
  -->

<xs:schema xmlns:tns="http://iec.ch/TC57/2011/GetMeterConfigMessage"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:msg="http://iec.ch/TC57/2011/schema/message"
           xmlns:obj1="http://iec.ch/TC57/2011/GetMeterConfig#"
           xmlns:obj2="http://iec.ch/TC57/2011/MeterConfig#"
           targetNamespace="http://iec.ch/TC57/2011/GetMeterConfigMessage"
           elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0">
    <!-- Base Message Definitions -->
    <xs:import namespace="http://iec.ch/TC57/2011/schema/message"
               schemaLocation="Message.xsd"/>
    <!-- CIM Information Object Definition -->
    <xs:import namespace="http://iec.ch/TC57/2011/GetMeterConfig#"
               schemaLocation="GetMeterConfig.xsd"/>
    <!-- Remove this Import if there is no "Get" Profile associated with this Object. -->
    <xs:import namespace="http://iec.ch/TC57/2011/MeterConfig#"
               schemaLocation="MeterConfig.xsd"/>
    <!-- RequestType Definition -->
    <xs:complexType name="GetMeterConfigRequestType">
        <xs:sequence>
            <xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Start time of interest</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>End time of interest</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Option" type="msg:OptionType" minOccurs="0"
                        maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Request type specialization</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Object ID for request</xs:documentation>
                </xs:annotation>
            </xs:element>
            <!-- Remove this Element if there is no "Get" Profile associated with this
            Object. -->
            <xs:element ref="obj2:MeterConfig"/>
            <xs:any namespace="##other" processContents="lax" minOccurs="0"
                    maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>This can be a CIM profile defined as an XSD with a CIMspecific
                        namespace
                    </xs:documentation>
                </xs:annotation>
            </xs:any>
        </xs:sequence>
    </xs:complexType>
    <!-- PayloadType Definition -->
    <xs:complexType name="GetMeterConfigPayloadType">
        <xs:sequence>
            <xs:element ref="obj2:MeterConfig" minOccurs="0"/>
            <xs:element name="OperationSet" type="msg:OperationSet" minOccurs="0"/>
            <xs:element name="Compressed" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>For compressed and/or binary, uuencoded
                        payloads
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Format" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Hint as to format of payload, e.g. XML, RDF, SVF, BINARY,
                        PDF, ...
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- Message Types -->
    <!-- RequestMessageType -->
    <xs:complexType name="GetMeterConfigRequestMessageType">
        <xs:sequence>
            <xs:element name="Header" type="msg:HeaderType"/>
            <xs:element name="Request" type="tns:GetMeterConfigRequestType"/>
            <xs:element name="Payload" type="tns:GetMeterConfigPayloadType"
                        minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- EventMessageType -->
    <xs:complexType name="GetMeterConfigEventMessageType">
        <xs:sequence>
            <xs:element name="Header" type="msg:HeaderType"/>
            <xs:choice>
                <xs:element name="Payload" type="tns:GetMeterConfigPayloadType"/>
                <xs:element name="Reply" type="msg:ReplyType"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <!-- ResponseMessageType -->
    <xs:complexType name="GetMeterConfigResponseMessageType">
        <xs:sequence>
            <xs:element name="Header" type="msg:HeaderType"/>
            <xs:element name="Reply" type="msg:ReplyType"/>
            <xs:element name="Payload" type="tns:GetMeterConfigPayloadType"
                        minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- FaultMessageType -->
    <xs:complexType name="GetMeterConfigFaultMessageType">
        <xs:sequence>
            <xs:element name="Reply" type="msg:ReplyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="GetMeterConfig"
                type="tns:GetMeterConfigRequestMessageType"/>
    <xs:element name="GetMeterConfigEventMessage"
                type="tns:GetMeterConfigEventMessageType"/>
    <xs:element name="GetMeterConfigResponseMessage"
                type="tns:GetMeterConfigResponseMessageType"/>
    <xs:element name="GetMeterConfigFaultMessage"
                type="tns:GetMeterConfigFaultMessageType"/>
</xs:schema>