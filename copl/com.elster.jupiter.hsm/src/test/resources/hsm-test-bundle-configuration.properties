#
# /*
#  * Copyright (c) 2018 by Honeywell International Inc. All Rights Reserved
#  */
#


# This should be absolute path to JSS (Maintenance) exported configuration (used to initialize JSS)
hsm.config.jss.init.file = hsm-runtime-configuration.json



# all lables with structure: hs.config.label.<>

# format hsm.config.label.[HSM-LABEL] = [FILE-LABEL],[IMPORT-CAPABILITY],[KEY-LENGTH],[RENEW-CAPABILITY],[IMPORT-HSM-LABEL]
# where :
#				 HSM-LABEL a label that is provisioned inside HSM
#                FILE-LABEL is mapping between label configured in HSM and the one present in file while it is possible for some client to already have a label structure in place. if not needed map to same value.
#				 IMPORT-CAPABILITY as defined in HSM/JSS, like SM_KEK_NONAUTHENTIC or SM_KEK_AUTHENTIC. This depends on label configuration provisioned in HSM. This capability will be used for import operation.
#				 KEY-LENGTH length of the key that is passed with current label (for a label that is defined using AES-256 value will be 256/8=32 while it is expressed in bytes)
#				 RENEW-CAPABILITY as defined in HSM/JSS, like SM_KEK_RENEW. This depends on label configuration provisioned in HSM. This capability will be used for renew operation.
#				 IMPORT-HSM-LABEL this is a HSM configured label that will be used in import phase for key re-encryption.
# Any of the configured values above can be missing at load time with no effect on bundle functionality, for instance if on label will not be used or does not have import capability simply leave empty string, however
# since the value for a certain label configuration is CSV format we need to add separators (comma).

hsm.config.label.IMP-SM-KEK = Pub_KEK_SM, SM_KEK_NONAUTHENTIC,256,, S-DB
# Following key does not have import capability but has renew, this means likely this is a label used only for key storage
hsm.config.label.S-DB=,,32,SM_KEK_RENEWAL,



